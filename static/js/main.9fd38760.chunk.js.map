{"version":3,"sources":["components/PageNavLink/PageNavLink.tsx","components/Navbar/Navbar.tsx","App.tsx","pages/HomePage/HomePage.tsx","pages/NotFoundPage/NotFoundPage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PersonRow/PersonRow.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage/PeoplePage.tsx","helpers/getPeopleWithParents.ts","components/Root/Root.tsx","index.tsx"],"names":["PageNavLink","to","linkText","className","isActive","classNames","Navbar","role","App","HomePage","NotFoundPage","API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","name","sex","slug","PersonRow","person","selectedSlug","born","died","fatherName","motherName","mother","father","PeopleTable","people","useParams","map","PeoplePage","useState","setPeople","hasError","setHasError","isWaiting","setIsWaiting","useEffect","peopleFromServer","peopleWithParents","personWithParents","forEach","parent","getPeopleWithParents","catch","finally","isDownloaded","length","Root","element","path","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.9fd38760.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\ntype Props = {\n  to: string;\n  linkText: string;\n};\n\ntype LinkState = {\n  isActive: boolean;\n};\n\ntype GetNavItemClassesFunc = (linkState: LinkState) => string;\n\nexport const PageNavLink: React.FC<Props> = ({ to, linkText }) => {\n  const getClasses: GetNavItemClassesFunc = ({ isActive }) => {\n    return classNames('navbar-item', {\n      'has-background-grey-lighter': isActive,\n    });\n  };\n\n  return (\n    <NavLink\n      to={to}\n      className={getClasses}\n    >\n      {linkText}\n    </NavLink>\n  );\n};\n","import React from 'react';\nimport { PageNavLink } from '../PageNavLink';\n\nexport const Navbar: React.FC = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink\n            to=\"/\"\n            linkText=\"Home\"\n          />\n\n          <PageNavLink\n            to=\"/people\"\n            linkText=\"People\"\n          />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import React from 'react';\nimport { Outlet } from 'react-router-dom';\n\nimport { Navbar } from './components/Navbar';\n\nimport './App.scss';\n\nexport const App: React.FC = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","import React from 'react';\n\nexport const HomePage: React.FC = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import { Person } from './types/Person';\n\nconst API_URL = (\n  'https://mate-academy.github.io/react_people-table/api/people.json'\n);\n\nfunction wait(delay: number) {\n  return new Promise((resolve) => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { Sex } from '../../types/Sex';\n\ntype Props = {\n  name: string;\n  sex: Sex;\n  slug: string;\n};\n\nexport const PersonLink: React.FC<Props> = ({ name, sex, slug }) => {\n  return (\n    <Link\n      to={`../${slug}`}\n      className={classNames({\n        'has-text-danger': sex === 'f',\n      })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { PersonLink } from '../PersonLink';\n\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n  selectedSlug: string;\n};\n\nexport const PersonRow: React.FC<Props> = ({ person, selectedSlug }) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n    slug,\n    mother,\n    father,\n  } = person;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': slug === selectedSlug,\n      })}\n    >\n      <td>\n        <PersonLink\n          name={name}\n          sex={sex}\n          slug={slug}\n        />\n      </td>\n\n      <td>{sex}</td>\n\n      <td>{born}</td>\n\n      <td>{died}</td>\n\n      <td>\n        {!motherName && '-'}\n\n        {mother ? (\n          <PersonLink\n            name={mother.name}\n            sex={mother.sex}\n            slug={mother.slug}\n          />\n        ) : (\n          motherName\n        )}\n      </td>\n\n      <td>\n        {!fatherName && '-'}\n\n        {father ? (\n          <PersonLink\n            name={father.name}\n            sex={father.sex}\n            slug={father.slug}\n          />\n        ) : (\n          fatherName\n        )}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { Person } from '../../types';\nimport { PersonRow } from '../PersonRow';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { slug: selectedSlug = '' } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map((person) => (\n          <PersonRow\n            person={person}\n            selectedSlug={selectedSlug}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\n\nimport { Loader } from '../../components/Loader';\nimport { PeopleTable } from '../../components/PeopleTable';\nimport { getPeopleWithParents } from '../../helpers/getPeopleWithParents';\n\nimport { Person } from '../../types';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [hasError, setHasError] = useState(false);\n  const [isWaiting, setIsWaiting] = useState(true);\n\n  useEffect(() => {\n    getPeople()\n      .then((peopleFromServer) => {\n        const peopleWithParents = getPeopleWithParents(peopleFromServer);\n\n        setPeople(peopleWithParents);\n      })\n      .catch(() => setHasError(true))\n      .finally(() => setIsWaiting(false));\n  }, []);\n\n  const isDownloaded = !isWaiting && !hasError;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isWaiting && <Loader />}\n\n          {hasError && (\n            <p\n              data-cy=\"peopleLoadingError\"\n              className=\"has-text-danger\"\n            >\n              Something went wrong\n            </p>\n          )}\n\n          {isDownloaded && people.length === 0 && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {isDownloaded && people.length > 0 && (\n            <PeopleTable people={people} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Person } from '../types';\n\nexport function getPeopleWithParents(people: Person[]): Person[] {\n  return people.map((person) => {\n    if (!person.motherName && !person.fatherName) {\n      return person;\n    }\n\n    const personWithParents: Person = { ...person };\n\n    people.forEach((parent) => {\n      if (parent.name === person.motherName) {\n        personWithParents.mother = parent;\n\n        return;\n      }\n\n      if (parent.name === person.fatherName) {\n        personWithParents.father = parent;\n      }\n    });\n\n    return personWithParents;\n  });\n}\n","import React from 'react';\nimport {\n  HashRouter,\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\n\nimport { App } from '../../App';\nimport { HomePage } from '../../pages/HomePage';\nimport { NotFoundPage } from '../../pages/NotFoundPage';\nimport { PeoplePage } from '../../pages/PeoplePage';\n\nexport const Root: React.FC = () => {\n  return (\n    <HashRouter>\n      <Routes>\n        <Route element={<App />}>\n          <Route\n            path=\"/\"\n            element={<HomePage />}\n          />\n\n          <Route\n            path=\"home\"\n            element={<Navigate to=\"/\" replace />}\n          />\n\n          <Route path=\"people\">\n            <Route\n              index\n              element={<PeoplePage />}\n            />\n            <Route\n              path=\":slug\"\n              element={<PeoplePage />}\n            />\n          </Route>\n\n          <Route\n            path=\"*\"\n            element={<NotFoundPage />}\n          />\n        </Route>\n      </Routes>\n    </HashRouter>\n  );\n};\n","import { createRoot } from 'react-dom/client';\n\nimport { Root } from './components/Root';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nconst root = createRoot(document.getElementById('root') as HTMLDivElement);\n\nroot.render(<Root />);\n"],"sourceRoot":""}